/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { HumanloopApi } from "@fern-api/humanloop";
import * as core from "../../../../core";

export const Annotation: core.serialization.ObjectSchema<serializers.Annotation.Raw, HumanloopApi.Annotation> =
    core.serialization.object({
        id: core.serialization.string(),
        externalId: core.serialization.property("external_id", core.serialization.string()),
        confidence: core.serialization.number().optional(),
        user: core.serialization.lazyObject(async () => (await import("../../..")).AnnotationUserResponse),
        task: core.serialization.lazyObject(async () => (await import("../../..")).AnnotationTaskResponse),
        start: core.serialization.number().optional(),
        end: core.serialization.number().optional(),
        text: core.serialization.string().optional(),
        strength: core.serialization.number().optional(),
        labelId: core.serialization.property("label_id", core.serialization.string()),
        label: core.serialization.lazyObject(async () => (await import("../../..")).Label),
        resultType: core.serialization.property("result_type", core.serialization.string()),
        reviewed: core.serialization.boolean().optional(),
    });

export declare namespace Annotation {
    interface Raw {
        id: string;
        external_id: string;
        confidence?: number | null;
        user: serializers.AnnotationUserResponse.Raw;
        task: serializers.AnnotationTaskResponse.Raw;
        start?: number | null;
        end?: number | null;
        text?: string | null;
        strength?: number | null;
        label_id: string;
        label: serializers.Label.Raw;
        result_type: string;
        reviewed?: boolean | null;
    }
}
