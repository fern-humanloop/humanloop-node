/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { HumanloopApi } from "@fern-api/humanloop";
import * as core from "../../../../core";

export const Request: core.serialization.Schema<
    serializers.annotation.update.Request.Raw,
    HumanloopApi.UpdateAnnotationRequest
> = core.serialization.object({
    reviewed: core.serialization.boolean().optional(),
    start: core.serialization.number().optional(),
    end: core.serialization.number().optional(),
    labelId: core.serialization.property("label_id", core.serialization.string().optional()),
    strength: core.serialization.number().optional(),
    text: core.serialization.string().optional(),
});

export declare namespace Request {
    interface Raw {
        reviewed?: boolean | null;
        start?: number | null;
        end?: number | null;
        label_id?: string | null;
        strength?: number | null;
        text?: string | null;
    }
}

export const Response: core.serialization.Schema<serializers.annotation.update.Response.Raw, HumanloopApi.Annotation> =
    core.serialization.lazyObject(async () => (await import("../../..")).Annotation);

export declare namespace Response {
    type Raw = serializers.Annotation.Raw;
}
