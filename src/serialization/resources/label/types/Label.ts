/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { HumanloopApi } from "@fern-api/humanloop";
import * as core from "../../../../core";

export const Label: core.serialization.ObjectSchema<serializers.Label.Raw, HumanloopApi.Label> =
    core.serialization.object({
        name: core.serialization.string(),
        id: core.serialization.string(),
        displayName: core.serialization.property("display_name", core.serialization.string().optional()),
        description: core.serialization.string().optional(),
        count: core.serialization.number().optional(),
        object: core.serialization.string().optional(),
        outputId: core.serialization.property("output_id", core.serialization.number()),
        output: core.serialization.lazyObject(async () => (await import("../../..")).Output).optional(),
        createdAt: core.serialization.property("created_at", core.serialization.string().optional()),
        updatedAt: core.serialization.property("updated_at", core.serialization.string().optional()),
    });

export declare namespace Label {
    interface Raw {
        name: string;
        id: string;
        display_name?: string | null;
        description?: string | null;
        count?: number | null;
        object?: string | null;
        output_id: number;
        output?: serializers.Output.Raw | null;
        created_at?: string | null;
        updated_at?: string | null;
    }
}
