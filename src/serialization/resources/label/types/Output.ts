/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { HumanloopApi } from "@fern-api/humanloop";
import * as core from "../../../../core";

export const Output: core.serialization.ObjectSchema<serializers.Output.Raw, HumanloopApi.Output> =
    core.serialization.object({
        id: core.serialization.number().optional(),
        name: core.serialization.string(),
        displayName: core.serialization.property("display_name", core.serialization.string().optional()),
        description: core.serialization.string().optional(),
        taskType: core.serialization.property(
            "task_type",
            core.serialization.lazy(async () => (await import("../../..")).TaskType)
        ),
        dataKey: core.serialization.property("data_key", core.serialization.string().optional()),
        dataType: core.serialization.property(
            "data_type",
            core.serialization.lazy(async () => (await import("../../..")).DataType).optional()
        ),
        projectId: core.serialization.property("project_id", core.serialization.number().optional()),
        object: core.serialization.string().optional(),
    });

export declare namespace Output {
    interface Raw {
        id?: number | null;
        name: string;
        display_name?: string | null;
        description?: string | null;
        task_type: serializers.TaskType.Raw;
        data_key?: string | null;
        data_type?: serializers.DataType.Raw | null;
        project_id?: number | null;
        object?: string | null;
    }
}
