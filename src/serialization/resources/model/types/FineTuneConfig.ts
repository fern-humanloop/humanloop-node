/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { HumanloopApi } from "@fern-api/humanloop";
import * as core from "../../../../core";

export const FineTuneConfig: core.serialization.ObjectSchema<
    serializers.FineTuneConfig.Raw,
    HumanloopApi.FineTuneConfig
> = core.serialization.object({
    provider: core.serialization.lazy(async () => (await import("../../..")).ModelProvider).optional(),
    baseModel: core.serialization.property("base_model", core.serialization.string()),
    validationSplit: core.serialization.property("validation_split", core.serialization.number().optional()),
    useCorrections: core.serialization.property("use_corrections", core.serialization.boolean().optional()),
    promptTemplate: core.serialization.property("prompt_template", core.serialization.string().optional()),
    generationTemplate: core.serialization.property("generation_template", core.serialization.string().optional()),
});

export declare namespace FineTuneConfig {
    interface Raw {
        provider?: serializers.ModelProvider.Raw | null;
        base_model: string;
        validation_split?: number | null;
        use_corrections?: boolean | null;
        prompt_template?: string | null;
        generation_template?: string | null;
    }
}
