/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { HumanloopApi } from "@fern-api/humanloop";
import * as core from "../../../../core";

export const ProjectModelConfig: core.serialization.ObjectSchema<
    serializers.ProjectModelConfig.Raw,
    HumanloopApi.ProjectModelConfig
> = core.serialization.object({
    id: core.serialization.string(),
    projectId: core.serialization.property("project_id", core.serialization.string().optional()),
    displayName: core.serialization.property("display_name", core.serialization.string()),
    modelName: core.serialization.property("model_name", core.serialization.string()),
    promptTemplate: core.serialization.property("prompt_template", core.serialization.string().optional()),
    provider: core.serialization.lazy(async () => (await import("../../..")).ModelProvider),
    endpoint: core.serialization.lazy(async () => (await import("../../..")).ModelEndpoint),
    createdAt: core.serialization.property("created_at", core.serialization.string()),
    updatedAt: core.serialization.property("updated_at", core.serialization.string()),
    lastUsed: core.serialization.property("last_used", core.serialization.string()),
    experimentId: core.serialization.property("experiment_id", core.serialization.string().optional()),
});

export declare namespace ProjectModelConfig {
    interface Raw {
        id: string;
        project_id?: string | null;
        display_name: string;
        model_name: string;
        prompt_template?: string | null;
        provider: serializers.ModelProvider.Raw;
        endpoint: serializers.ModelEndpoint.Raw;
        created_at: string;
        updated_at: string;
        last_used: string;
        experiment_id?: string | null;
    }
}
