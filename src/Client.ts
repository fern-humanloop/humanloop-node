/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "./environments";
import * as core from "./core";
import { Client as AnnotationClient } from "./api/resources/annotation/client/Client";
import { Client as DatasetClient } from "./api/resources/dataset/client/Client";
import { Client as DataSnapshotClient } from "./api/resources/dataSnapshot/client/Client";
import { Client as LabelClient } from "./api/resources/label/client/Client";
import { Client as MetricsClient } from "./api/resources/metrics/client/Client";
import { Client as ModelClient } from "./api/resources/model/client/Client";
import { Client as ModelConfigurationClient } from "./api/resources/modelConfiguration/client/Client";
import { Client as MonitoringClient } from "./api/resources/monitoring/client/Client";

export declare namespace HumanloopApiClient {
    interface Options {
        environment?: environments.HumanloopApiEnvironment | string;
        apiKey?: core.Supplier<string>;
    }
}

export class HumanloopApiClient {
    constructor(private readonly options: HumanloopApiClient.Options) {}

    #annotation: AnnotationClient | undefined;

    public get annotation(): AnnotationClient {
        return (this.#annotation ??= new AnnotationClient(this.options));
    }

    #dataset: DatasetClient | undefined;

    public get dataset(): DatasetClient {
        return (this.#dataset ??= new DatasetClient(this.options));
    }

    #dataSnapshot: DataSnapshotClient | undefined;

    public get dataSnapshot(): DataSnapshotClient {
        return (this.#dataSnapshot ??= new DataSnapshotClient(this.options));
    }

    #label: LabelClient | undefined;

    public get label(): LabelClient {
        return (this.#label ??= new LabelClient(this.options));
    }

    #metrics: MetricsClient | undefined;

    public get metrics(): MetricsClient {
        return (this.#metrics ??= new MetricsClient(this.options));
    }

    #model: ModelClient | undefined;

    public get model(): ModelClient {
        return (this.#model ??= new ModelClient(this.options));
    }

    #modelConfiguration: ModelConfigurationClient | undefined;

    public get modelConfiguration(): ModelConfigurationClient {
        return (this.#modelConfiguration ??= new ModelConfigurationClient(this.options));
    }

    #monitoring: MonitoringClient | undefined;

    public get monitoring(): MonitoringClient {
        return (this.#monitoring ??= new MonitoringClient(this.options));
    }
}
